#ifndef UTILS_H
#define UTILS_H
#include<stdbool.h>
#include<Windows.h>

#define HWRATIO 2.5

typedef enum COLOR {
    BLACK = 0,
    DARKBLUE = FOREGROUND_BLUE,
    DARKGREEN = FOREGROUND_GREEN,
    DARKCYAN = FOREGROUND_GREEN | FOREGROUND_BLUE,
    DARKRED = FOREGROUND_RED,
    DARKMAGENTA = FOREGROUND_RED | FOREGROUND_BLUE,
    DARKYELLOW = FOREGROUND_RED | FOREGROUND_GREEN,
    DARKGRAY = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
    GRAY = FOREGROUND_INTENSITY,
    BLUE = FOREGROUND_INTENSITY | FOREGROUND_BLUE,
    GREEN = FOREGROUND_INTENSITY | FOREGROUND_GREEN,
    CYAN = FOREGROUND_INTENSITY | FOREGROUND_GREEN | FOREGROUND_BLUE,
    RED = FOREGROUND_INTENSITY | FOREGROUND_RED,
    MAGENTA = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_BLUE,
    YELLOW = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN,
    WHITE = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
    BACKDARKBLUE = BACKGROUND_BLUE,
    BACKDARKGREEN = BACKGROUND_GREEN,
    BACKDARKCYAN = BACKGROUND_GREEN | BACKGROUND_BLUE,
    BACKDARKRED = BACKGROUND_RED,
    BACKDARKMAGENTA = BACKGROUND_RED | BACKGROUND_BLUE,
    BACKDARKYELLOW = BACKGROUND_RED | BACKGROUND_GREEN,
    BACKDARKGRAY = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
    BACKGRAY = BACKGROUND_INTENSITY,
    BACKBLUE = BACKGROUND_INTENSITY | BACKGROUND_BLUE,
    BACKGREEN = BACKGROUND_INTENSITY | BACKGROUND_GREEN,
    BACKCYAN = BACKGROUND_INTENSITY | BACKGROUND_GREEN | BACKGROUND_BLUE,
    BACKRED = BACKGROUND_INTENSITY | BACKGROUND_RED,
    BACKMAGENTA = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_BLUE,
    BACKYELLOW = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_GREEN,
    BACKWHITE = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
    CYANMAGENTA = CYAN | BACKMAGENTA
} COLOR;

void setwindowsize(int width, int height);
void setcursorvisibility(bool visible);
void setposition(COORD pos);
void cprint(char c, COORD pos);
void sprint(char* s, COORD pos);
void setcolor(int fc);
void coloredprint(char c, COORD pos, COLOR color);
void scoloredprint(char* s, COORD pos, COLOR color);
COORD getposition( int index, int WIDTH, COORD offset );
void clrscr(int WIDTH, int HEIGHT);

#endif 